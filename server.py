from flask import Flask, send_file, send_from_directory, request, jsonify
import webbrowser
import threading
import time
import os
import json
from pathlib import Path
import sys

class CedRDesktopApp:
    def __init__(self):
        self.app = Flask(__name__)
        self.setup_routes()
        
    def setup_routes(self):
        # –ì–ª–∞–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        @self.app.route('/')
        def index():
            return self.serve_file('start.html')
        
        @self.app.route('/editor')
        def editor():
            return self.serve_file('editor.html')
        
        # API endpoints
        @self.app.route('/api/projects', methods=['GET', 'POST'])
        def handle_projects():
            if request.method == 'GET':
                return jsonify({"projects": [
                    {
                        "id": 1,
                        "title": "–ü—Ä–∏–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –±—ç–∫–µ–Ω–¥–∞", 
                        "description": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç",
                        "created_at": "2025-10-31",
                        "scenes": []
                    }
                ]})
            else:
                data = request.json
                return jsonify({
                    "status": "success", 
                    "message": "–ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω",
                    "project": {
                        "id": 2,
                        "title": data.get('title', '–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç'),
                        "description": data.get('description', '')
                    }
                })
        
        @self.app.route('/api/settings', methods=['GET', 'POST'])
        def handle_settings():
            if request.method == 'GET':
                return jsonify({"theme": "light", "auto_save": True})
            else:
                return jsonify({"status": "success", "message": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"})
        
        # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
        @self.app.route('/<path:filename>')
        def serve_static(filename):
            return self.serve_file(filename)
        
        @self.app.route('/css/<path:filename>')
        def serve_css(filename):
            return self.serve_file(filename)
        
        @self.app.route('/js/<path:filename>')
        def serve_js(filename):
            return self.serve_file(filename)

    def serve_file(self, filename):
        """–£–º–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ web"""
        try:
            # –ë–∞–∑–æ–≤—ã–µ —Ñ–∞–π–ª—ã
            if filename in ['start.html', 'editor.html']:
                return send_file(f'web/{filename}')
            
            # CSS —Ñ–∞–π–ª—ã
            if filename.endswith('.css'):
                return send_file(f'web/{filename}')
            
            # JS —Ñ–∞–π–ª—ã  
            if filename.endswith('.js'):
                return send_file(f'web/{filename}')
            
            # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            if filename.endswith('.png'):
                return send_file(f'web/{filename}')
            
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
            file_path = Path('web') / filename
            if file_path.exists():
                return send_file(str(file_path))
            
            return f"File {filename} not found", 404
            
        except Exception as e:
            print(f"Error serving {filename}: {str(e)}")
            return f"Error serving file", 500

    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        def open_browser():
            time.sleep(1.5)
            webbrowser.open('http://localhost:5000')
        
        print("=" * 60)
        print("üöÄ CedR Desktop Application")
        print("üìç http://localhost:5000")
        print("üõë Ctrl+C to stop")
        print("=" * 60)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        threading.Thread(target=open_browser, daemon=True).start()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        self.app.run(port=5000, debug=False, host='127.0.0.1')

